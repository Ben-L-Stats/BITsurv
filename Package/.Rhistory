Distribution='exp',
time.break=5)
View(simple.data)
simple.data<-data.frame(time=rexp(100, rate=1/20)) %>%
mutate(event=ifelse(time>=25,
0, 1),
time=ifelse(time>=25,
runif(100, min=20, max=25),time))
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
time.break=5)
?Fit.curve.plot
??ggplotGrob
use_package("dplyr")
use_package(survHE, survminer,sinib)
use_package(survHE)
use_package('survHE')
use_package('survminer')
use_package('sinib')
?BITsurv
?BIT.plot
?BIT.TS.PAVSI
BIT.TS.TFT
?BIT.TS.TFT
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
time.break=5)
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = =5)
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
?BIT.surv
?BITsurv
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
BITsurv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
load_all()
BITsurv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
?BIT.plot
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
load_all()
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
?BIT.TS.PAVSI
BIT.TS.PAVSI(p.vals=BIT.table$V.mid.pval)
BIT.TS.PAVSI(p.vals=0.1*c(1:9))
?BIT.TS.TFT
BIT.TS.TFT(p.vals=BIT.table$V.mid.pval)
BIT.TS.TFT(p.vals=0.1*c(1:9))
simple.data<-data.frame(time=rexp(100, rate=1/20)) %>%
mutate(event=ifelse(time>=25,
0, 1),
time=ifelse(time>=25,
runif(100, min=20, max=25),time))
load_all()
#--------------------------------------------------------------------------------
?Fit.curve.plot
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
#--------------------------------------------------------------------------------
?BIT.surv
#Here we use the 10 evenly spaced interval approach:
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#--------------------------------------------------------------------------------
?BIT.plot
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
simple.data<-data.frame(time=rexp(100, rate=1/20)) %>%
mutate(event=ifelse(time>=25,
0, 1),
time=ifelse(time>=25,
runif(100, min=20, max=25),time))
load_all()
#--------------------------------------------------------------------------------
?Fit.curve.plot
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
#--------------------------------------------------------------------------------
?BIT.surv
#Here we use the 10 evenly spaced interval approach:
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#--------------------------------------------------------------------------------
?BIT.plot
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
View(BIT.table)
library(devtools)
library(dplyr)
data.frame(T=rexp(100, rate=1/20))
data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20))
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
?flexsurvreg
?Surv
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
?survfit
?ggsurvplot
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
?ggplotGrob
?geom_line
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
use.package(ggplot2)
use_package(ggplot2)
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
?BIT.surv
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
load_all()
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
load_all()
BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
?survfit
load_all()
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
?survfit
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
library(devtools)
library(dplyr)
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
BIT.table
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
load_all()
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
?geom_rect
load_all()
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
load_all()
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
load_all()
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
load_all()
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
load_all()
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
load_all()
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
BIT.TS.PAVSI(p.vals=BIT.table$V.mid.pval)
BIT.TS.PAVSI(p.vals=0.1*c(1:9))
BIT.TS.TFT(p.vals=BIT.table$V.mid.pval)
BIT.TS.TFT(p.vals=0.1*c(1:9))
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
#--------------------------------------------------------------------------------
?Fit.curve.plot
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
#--------------------------------------------------------------------------------
?BIT.surv
#Here we use the 10 evenly spaced interval approach:
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#--------------------------------------------------------------------------------
?BIT.plot
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
#--------------------------------------------------------------------------------
?Fit.curve.plot
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
#--------------------------------------------------------------------------------
?BIT.surv
#Here we use the 10 evenly spaced interval approach:
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#--------------------------------------------------------------------------------
?BIT.plot
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
#--------------------------------------------------------------------------------
?Fit.curve.plot
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
#--------------------------------------------------------------------------------
?BIT.surv
#Here we use the 10 evenly spaced interval approach:
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#--------------------------------------------------------------------------------
?BIT.plot
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
#--------------------------------------------------------------------------------
?Fit.curve.plot
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
#--------------------------------------------------------------------------------
?BIT.surv
#Here we use the 10 evenly spaced interval approach:
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#--------------------------------------------------------------------------------
?BIT.plot
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
#--------------------------------------------------------------------------------
?Fit.curve.plot
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
#--------------------------------------------------------------------------------
?BIT.surv
#Here we use the 10 evenly spaced interval approach:
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#--------------------------------------------------------------------------------
?BIT.plot
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
#--------------------------------------------------------------------------------
?Fit.curve.plot
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
#--------------------------------------------------------------------------------
?BIT.surv
#Here we use the 10 evenly spaced interval approach:
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#--------------------------------------------------------------------------------
?BIT.plot
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
#--------------------------------------------------------------------------------
?Fit.curve.plot
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
#--------------------------------------------------------------------------------
?BIT.surv
#Here we use the 10 evenly spaced interval approach:
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
#--------------------------------------------------------------------------------
?BIT.plot
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
?Fit.curve.plot
?Fit.curve.plot
detach(dplyr)
detach("package:dplyr", unload=TRUE)
load_all()
library(devtools)
load_all()
BIT.TS.TFT(p.vals=0.1*c(1:9))
library(devtools)
library(dplyr)
simple.data<-data.frame(T=rexp(100, rate=1/10),
cens=runif(100, 0, 20)) %>%
mutate(event=ifelse(T<=cens,
0, 1),
time=ifelse(T<=cens,
T,cens))
load_all()
Fit.curve.plot(surv.data=simple.data,
Distribution='exp',
break.time = 5)
censors<-simple.data %>% filter(event==0)
spec_int<-0.1*max(censors$time)*0:10
#Run BITsurv
BIT.table<-BIT.surv(surv.data=simple.data,
Distribution='exp',
spec_int=spec_int)
BIT.plot(surv.data=simple.data,
Distribution='exp',
BIT.table=BIT.table,
break.time=5)
#--------------------------------------------------------------------------------
?BIT.TS.PAVSI
BIT.TS.PAVSI(p.vals=BIT.table$V.mid.pval)
BIT.TS.PAVSI(p.vals=0.1*c(1:9))
?BIT.TS.TFT
BIT.TS.TFT(p.vals=BIT.table$V.mid.pval)
BIT.TS.TFT(p.vals=0.1*c(1:9))
?BIT.surv
